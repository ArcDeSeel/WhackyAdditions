#define SPIN POINT_X POINT_Y FOCUS_X FOCUS_Y V1 V2 V3 V4 O1
	{VARIABLE_OP x_diff to_variable {POINT_X}}
	{VARIABLE_OP negative_focus_x value {FOCUS_X}}
	{VARIABLE_OP negative_focus_x multiply -1}
	{VARIABLE_OP x_diff add $negative_focus_x}
	
	{VARIABLE_OP x_counter to_variable x_diff}
	{VARIABLE_OP x_loc value {FOCUS_X}}
	{VARIABLE_OP y_loc value {FOCUS_Y}}

	[while]
		[and]
			[variable]
				name=x_counter
				numerical_not_equals=0
			[/variable]
		[/and]
		[do]
			[store_locations]
				x=$x_loc
				y=$y_loc
				radius=1
				variable=next_locations
			[/store_locations]
			[if]
				[variable]
					name=x_counter
					greater_than=0
				[/variable]
				[then]
					{VARIABLE_OP x_loc to_variable next_locations[{V1}].x}
					{VARIABLE_OP y_loc to_variable next_locations[{V1}].y}
					{VARIABLE_OP x_counter add -1}
				[/then]
				[else]
					{VARIABLE_OP x_loc to_variable next_locations[{V2}].x}
					{VARIABLE_OP y_loc to_variable next_locations[{V2}].y}
					{VARIABLE_OP x_counter add 1}
				[/else]
			[/if]
		[/do]
	[/while]
	
	{VARIABLE_OP y_diff to_variable y_loc}
	{VARIABLE_OP negative_point_y to_variable {POINT_Y}}
	{VARIABLE_OP negative_point_y multiply -1}
	{VARIABLE_OP y_diff add $negative_point_y}
	
	{VARIABLE_OP y_counter to_variable y_diff}
	{VARIABLE_OP x_loc2 value {FOCUS_X}}
	{VARIABLE_OP y_loc2 value {FOCUS_Y}}
	{VARIABLE_OP modifier to_variable x_diff}
	{VARIABLE_OP modifier multiply {O1}}
	{VARIABLE_OP y_loc2 add $modifier}
	
	[while]
		[and]
			[variable]
				name=y_counter
				numerical_not_equals=0
			[/variable]
		[/and]
		[variable]
			name=y_counter
			numerical_not_equals=0
		[/variable]
		[do]
			[store_locations]
				x=$x_loc2
				y=$y_loc2
				radius=1
				variable=next_locations
			[/store_locations]
			[if]
				[variable]
					name=y_counter
					greater_than=0
				[/variable]
				[then]
					{VARIABLE_OP x_loc2 to_variable next_locations[{V3}].x}
					{VARIABLE_OP y_loc2 to_variable next_locations[{V3}].y}
					{VARIABLE_OP y_counter add -1}
				[/then]
				[else]
					{VARIABLE_OP x_loc2 to_variable next_locations[{V4}].x}
					{VARIABLE_OP y_loc2 to_variable next_locations[{V4}].y}
					{VARIABLE_OP y_counter add 1}
				[/else]
			[/if]
		[/do]
	[/while]
	
	{VARIABLE_OP {POINT_X} to_variable x_loc2}
	{VARIABLE_OP {POINT_Y} to_variable y_loc2}
#enddef
#POINT_X and Y have to be variable names; FOCUS_X and Y have to be numbers (which can be e.g. $q)
#this makes POINT equal to POINT rotated 60 degrees around FOCUS.
#define 60DEGREES_COUNTERCLOCKWISE POINT_X POINT_Y FOCUS_X FOCUS_Y
	{SPIN {POINT_X} {POINT_Y} {FOCUS_X} {FOCUS_Y} 5 1 0 6 -1}
#enddef
#define 60DEGREES_CLOCKWISE POINT_X POINT_Y FOCUS_X FOCUS_Y
	{SPIN {POINT_X} {POINT_Y} {FOCUS_X} {FOCUS_Y} 6 0 5 1 1}
#enddef
#define WHEEL DIRECTION UNITS TERRAIN FOCUS_X FOCUS_Y RADIUS
	{VARIABLE_OP units value {UNITS}}
	[if]
		[variable]
			name=units
			boolean_equals="yes"
		[/variable]
		[then]
			[store_unit]
				[filter]
					[filter_location]
						x,y={FOCUS_X},{FOCUS_Y}
						radius={RADIUS}
					[/filter_location]
				[/filter]
				variable=wheel
				kill=yes
			[/store_unit]
			{FOREACH wheel var}
				{{DIRECTION} wheel[$var].x wheel[$var].y {FOCUS_X} {FOCUS_Y}}
				[unstore_unit]
					variable=wheel[$var]
				[/unstore_unit]
			{NEXT var}
		[/then]
	[/if]
	{VARIABLE_OP terrain value {TERRAIN}}
	[if]
		[variable]
			name=terrain
			boolean_equals="yes"
		[/variable]
		[then]
			[store_locations]
				x,y={FOCUS_X},{FOCUS_Y}
				radius={RADIUS}
				variable=wheel
			[/store_locations]
			{FOREACH wheel var}
				{{DIRECTION} wheel[$var].x wheel[$var].y {FOCUS_X} {FOCUS_Y}}
				[terrain]
					x,y=$wheel[$var].x,$wheel[$var].y
					terrain=$wheel[$var].terrain
				[/terrain]
				[if]
					[variable]
						name=wheel[$var].terrain
						contains="V"
					[/variable]
					[then]
						[capture_village]
							side=$wheel[$var].owner_side
							x=$wheel[$var].x
							y=$wheel[$var].y
						[/capture_village]
					[/then]
				[/if]
			{NEXT var}
		[/then]
	[/if]
#enddef
#define HOOPCLOCKWISE UNITS TERRAIN FOCUS_X FOCUS_Y RADIUS
	{VARIABLE_OP radiu value {RADIUS}}
	{VARIABLE_OP radiu sub 1}
	[store_locations]
		[and]
			x={FOCUS_X}
			y={FOCUS_Y}
			radius={RADIUS}
		[/and]
		[not]
			x={FOCUS_X}
			y={FOCUS_Y}
			radius=$radiu
		[/not]
		variable=swappees
	[/store_locations]
	{FOREACH swappees var}
		[message]
			message=$swappees[$var].x "," $swappees[$var].y
		[/message]
	{NEXT var}
	[set_variables]
		name=ordered
		[value]
		[/value]
	[/set_variables]
	{VARIABLE_OP hexesleft value {RADIUS}}
	{VARIABLE_OP hexesleft multiply 6}
	{VARIABLE_OP hexes to_variable hexesleft}
	{VARIABLE_OP currentx to_variable swappees[0].x}
	{VARIABLE_OP currenty to_variable swappees[0].y}
	[set_variables]
		name=ordered
		mode=append
		[value]
			x=$currentx
			y=$currenty
		[/value]
	[/set_variables]
	[while]
		[variable]
			name=hexesleft
			greater_than=0
		[/variable]
		[do]
			[store_locations]
				x=$currentx
				y=$currenty
				radius=1
				[and]
					x={FOCUS_X}
					y={FOCUS_Y}
					radius={RADIUS}
				[/and]
				[not]
					[and]
						x=$currentx
						y=$currenty
					[/and]
					[and]
						x={FOCUS_X}
						y={FOCUS_Y}
						radius=$radiu
					[/and]
				[/not]
				variable=choices
			[/store_locations]
			{VARIABLE_OP xrightedge value {FOCUS_X}}
			{VARIABLE_OP xleftedge value {FOCUS_X}}
			{VARIABLE_OP xrightedge add {RADIUS}}
			{VARIABLE_OP xleftedge sub {RADIUS}}
			[if]
				[or]
					[variable]
						name=currentx
						numerical_equals=$xrightedge
					[/variable]
					[and]
						[variable]
							name=currentx
							numerical_not_equals=$xleftedge
						[/variable]
						[variable]
							name=currenty
							greater_than={FOCUS_X}
						[/variable]
					[/and]
				[/or]
				[then]
					{VARIABLE_OP currentx to_variable choices[1].x}
					{VARIABLE_OP currenty to_variable choices[1].y}
				[/then]
				[else]
					{VARIABLE_OP currentx to_variable choices[0].x}
					{VARIABLE_OP currenty to_variable choices[0].y}
				[/else]
			[/if]
			[message]
				message=$currentx "," $currenty
			[/message]
			{VARIABLE_OP hexesleft sub 1}
			[set_variables]
				name=ordered
				mode=append
				[value]
					x=$currentx
					y=$currenty
				[/value]
			[/set_variables]
		[/do]
	[/while]
	{VARIABLE_OP units value {UNITS}}
	[if]
		[variable]
			name=units
			boolean_equals="yes"
		[/variable]
		[then]
			{FOREACH ordered var}
				[store_unit]
					[filter]
						[filter_location]
							x=$ordered[$var].x
							y=$ordered[$var].y
						[/filter_location]
					[/filter]
					variable=unitlist[$var]
					kill=yes
				[/store_unit]
			{NEXT var}
			{FOREACH ordered var}
				{VARIABLE_OP nextvar to_variable var}
				{VARIABLE_OP nextunitlist to_variable unitlist}
				{VARIABLE_OP nextvar add 1}
				{VARIABLE_OP nextvar modulo hexes}
				{VARIABLE_OP nextunitlist[$var].x to_variable unitlist[$nextvar].x}
				{VARIABLE_OP nextunitlist[$var].y to_variable unitlist[$nextvar].y}
				[unstore_unit]
					variable=nextunitlist[$var]
				[/unstore_unit]
			{NEXT var}
		[/then]
	[/if]
	{VARIABLE_OP terrain value {TERRAIN}}
	[if]
		[variable]
			name=terrain
			boolean_equals="yes"
		[/variable]
		[then]
			{FOREACH ordered var}
				[store_locations]
					variable=loclist[$var]
					x=$ordered[$var].x
					y=$ordered[$var].y
				[/store_locations]
			{NEXT var}
			{FOREACH ordered var}
				{VARIABLE_OP nextvar to_variable var}
				{VARIABLE_OP nextloclist to_variable loclist}
				{VARIABLE_OP nextvar add 1}
				{VARIABLE_OP nextvar modulo hexes}
				{VARIABLE_OP nextloclist[$var][0].x to_variable loclist[$nextvar][0].x}
				{VARIABLE_OP nextloclist[$var][0].y to_variable loclist[$nextvar][0].y}
				[terrain]
					x,y=$nextloclist[$var][0].x,$nextloclist[$var][0].y
					terrain=$nextloclist[$var][0].terrain
				[/terrain]
				[if]
					[variable]
						name=nextloclist[$var][0].terrain
						contains="V"
					[/variable]
					[then]
						[capture_village]
							side=nextloclist[$var][0].owner_side
							x=$nextloclist[$var][0].x
							y=$nextloclist[$var][0].y
						[/capture_village]
					[/then]
				[/if]
			{NEXT var}
		[/then]
	[/if]
#enddef
