
[abilities]
	[dummy]
		id=split
		name=_"split"
		description=_"Split:
		This unit will split when advancing."
	[/dummy]
[/abilities]

#define ALLSPLIT
[event]
	name=side_turn
	first_time_only=no
	[store_unit]
		[filter]
			side=$side_number
		[/filter]
		variable=splitty
		kill=no
	[/store_unit]
	[set_variable]
		name=bad
		rand=1..$splitty.length
	[/set_variable]
	[set_variable]
		name=bad
		sub=1
	[/set_variable]
	[set_variable]
		name=splitty[$bad].hitpoints
		divide=2
	[/set_variable]
	[unstore_unit]
		variable=splitty[$bad]
	[/unstore_unit]
	{VARIABLE_OP splitty[$bad].canrecruit value "no"}
	{VARIABLE_OP splitty[$bad].id value "baby"}
	{VARIABLE_OP splitty[$bad].role value ""}
	[unstore_unit]
		find_vacant=yes
		variable=splitty[$bad]
	[/unstore_unit]
	{SPLITVOLVE}
[/event]
#enddef
#define SPLITVOLVE
# MELEE
			[set_variable]
				name=m_damage
				rand=-2,-1,-1,0,0,0,0,0,1,1,2
			[/set_variable]
			[set_variable]
				name=m_attacks
				rand=-1,0,0,0,0,0,0,0,0,1
			[/set_variable]
			[set_variable]
				name=m_type
				rand=same,same,same,same,same,same,blade,pierce,impact,fire,cold,arcane
			[/set_variable]
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=attack
					range=melee
					increase_damage=$m_damage
					increase_attacks=$m_attacks
				[/effect]
				silent=yes
			[/object]
			[if]
				[not]
					[variable]
						name=m_type
						equals=same
					[/variable]
				[/not]
				[then]
					[object]
						[filter]
							id=baby
						[/filter]
						[effect]
							apply_to=attack
							range=melee
							set_type=$m_type
						[/effect]
						silent=yes
					[/object]
				[/then]
			[/if]
# RANGED
			[set_variable]
				name=r_damage
				rand=-2,-1,-1,0,0,0,0,0,1,1,2
			[/set_variable]
			[set_variable]
				name=r_attacks
				rand=-1,0,0,0,0,0,0,0,0,1
			[/set_variable]
			[set_variable]
				name=r_type
				rand=same,same,same,same,same,same,blade,pierce,impact,fire,cold,arcane
			[/set_variable]
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=attack
					range=ranged
					increase_damage=$r_damage
					increase_attacks=$r_attacks
				[/effect]
				silent=yes
			[/object]
			[if]
				[not]
					[variable]
						name=r_type
						equals=same
					[/variable]
				[/not]
				[then]
					[object]
						[filter]
							id=baby
						[/filter]
						[effect]
							apply_to=attack
							range=ranged
							set_type=$r_type
						[/effect]
						silent=yes
					[/object]
				[/then]
			[/if]
# HITPOINTS
			[set_variable]
				name=hp
				rand=-5,-3,-3,-2,-2,-2,-1,-1,-1,-1,-1,0,1,1,1,1,1,2,2,2,3,3,5
			[/set_variable]
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=hitpoints
					increase_total=$hp
				[/effect]
				[effect]
					apply_to=hitpoints
					increase=$hp
				[/effect]
				silent=yes
			[/object]
# MOVEMENT
			[set_variable]
				name=move
				rand=-1,0,0,0,0,1
			[/set_variable]
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=movement
					increase=$move
				[/effect]
				silent=yes
			[/object]
# MAX_EXPERIENCE
			[set_variable]
				name=xp
				rand=-5,-3,-3,-2,-2,-2,-1,-1,-1,-1,-1,0,1,1,1,1,1,2,2,2,3,3,5
			[/set_variable]
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=max_experience
					increase=$xp
				[/effect]
				silent=yes
			[/object]
# MOVECOSTS
			{MOVECOSTSETFORTYPESMALLRANGE deep_water}
			{MOVECOSTSETFORTYPESMALLRANGE shallow_water}
			{MOVECOSTSETFORTYPESMALLRANGE reef}
			{MOVECOSTSETFORTYPESMALLRANGE swamp_water}
			{MOVECOSTSETFORTYPESMALLRANGE flat}
			{MOVECOSTSETFORTYPESMALLRANGE sand}
			{MOVECOSTSETFORTYPESMALLRANGE forest}
			{MOVECOSTSETFORTYPESMALLRANGE hills}
			{MOVECOSTSETFORTYPESMALLRANGE mountains}
			{MOVECOSTSETFORTYPESMALLRANGE village}
			{MOVECOSTSETFORTYPESMALLRANGE castle}
			{MOVECOSTSETFORTYPESMALLRANGE cave}
			{MOVECOSTSETFORTYPESMALLRANGE frozen}
			[set_variable]
				name=unwalkableca
				rand=-1,0,0,0,0,0,0,0,1
			[/set_variable]
			{MOVECOSTSETFORTYPESMALLRANGE fungus}
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=movement_costs
					replace=no
					[movement_costs]
						deep_water=$deep_waterca
						shallow_water=$shallow_waterca
						reef=$reefca
						swamp_water=$swamp_waterca
						flat=$flatca
						sand=$sandca
						forest=$forestca
						hills=$hillsca
						mountains=$mountainsca
						village=$villageca
						castle=$castleca
						cave=$caveca
						frozen=$frozenca
						unwalkable=$unwalkableca
						fungus=$fungusca
					[/movement_costs]
				[/effect]
				silent=yes
			[/object]
# DEFENSE
			{DEFORRESCOSTSETFORTYPERANGE deep_water}
			{DEFORRESCOSTSETFORTYPERANGE shallow_water}
			{DEFORRESCOSTSETFORTYPERANGE reef}
			{DEFORRESCOSTSETFORTYPERANGE swamp_water}
			{DEFORRESCOSTSETFORTYPERANGE flat}
			{DEFORRESCOSTSETFORTYPERANGE sand}
			{DEFORRESCOSTSETFORTYPERANGE forest}
			{DEFORRESCOSTSETFORTYPERANGE hills}
			{DEFORRESCOSTSETFORTYPERANGE mountains}
			{DEFORRESCOSTSETFORTYPERANGE village}
			{DEFORRESCOSTSETFORTYPERANGE castle}
			{DEFORRESCOSTSETFORTYPERANGE cave}
			{DEFORRESCOSTSETFORTYPERANGE frozen}
			{DEFORRESCOSTSETFORTYPERANGE unwalkable}
			{DEFORRESCOSTSETFORTYPERANGE fungus}
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=defense
					replace=no
					[defense]
						deep_water=$deep_waterdt
						shallow_water=$shallow_waterdt
						reef=$reefdt
						swamp_water=$swamp_waterdt
						flat=$flatdt
						sand=$sanddt
						forest=$forestdt
						hills=$hillsdt
						mountains=$mountainsdt
						village=$villagedt
						castle=$castledt
						cave=$cavedt
						frozen=$frozendt
						unwalkable=$unwalkabledt
						fungus=$fungusdt
					[/defense]
				[/effect]
				silent=yes
			[/object]
# RESISTANCES
			{DEFORRESCOSTSETFORTYPERANGE blade}
			{DEFORRESCOSTSETFORTYPERANGE pierce}
			{DEFORRESCOSTSETFORTYPERANGE impact}
			{DEFORRESCOSTSETFORTYPERANGE fire}
			{DEFORRESCOSTSETFORTYPERANGE cold}
			{DEFORRESCOSTSETFORTYPERANGE arcane}
			[object]
				[filter]
					id=baby
				[/filter]
				[effect]
					apply_to=resistance
					replace=no
					[resistance]
						blade=$bladedt
						pierce=$piercedt
						impact=$impactdt
						fire=$firedt
						cold=$colddt
						arcane=$arcanedt
					[/resistance]
				[/effect]
				silent=yes
			[/object]
# DE-BABY
			[store_unit]
				[filter]
					id=baby
				[/filter]
				variable=baby
				kill=no
			[/store_unit]
			{VARIABLE_OP baby.id value ""}
			[unstore_unit]
				variable=baby
				replace=yes
			[/unstore_unit]
#enddef
